-- 1. 프로필 사진 테이블
DROP TABLE IF EXISTS TBL_PROFILE_IMAGE;

CREATE TABLE IF NOT EXISTS TBL_PROFILE_IMAGE(
	PROFILE_IMAGE_NO int PRIMARY KEY AUTO_INCREMENT,
	PROFILE_IMAGE_ORIGINAL_NAME varchar(255) NOT NULL,
	PROFILE_IMAGE_CHANGED_NAME varchar(255) NOT NULL,
	PROFILE_IMAGE_EXT varchar(10) NOT NULL,
	PROFILE_IMAGE_PATH varchar(255) NOT NULL,
	PROFILE_IMAGE_REGIST_DATE timestamp NOT NULL,
	PROFILE_IMAGE_UPDATE_DATE timestamp,
	PROFILE_IMAGE_STATUS varchar(10) DEFAULT 'active' NOT NULL
	)ENGINE=innodb;

-- 2. 회원 정보 테이블
DROP TABLE IF EXISTS TBL_USER;

CREATE TABLE IF NOT EXISTS TBL_USER(
	USER_NO int PRIMARY KEY AUTO_INCREMENT,
	USER_EMAIL varchar(255) UNIQUE NOT NULL,
	USER_PASSWORD varchar(255) NOT NULL,
	USER_NICKNAME varchar(50) UNIQUE NOT NULL,
	USER_PHONE varchar(15) NOT NULL,
	USER_SNS varchar(10),
	USER_STATUS varchar(10) DEFAULT 'active' NOT NULL,
	USER_AUTH varchar(10) NOT NULL,
	USER_REGIST_DATE timestamp NOT NULL,
	USER_UPDATE_DATE timestamp,
	PROFILE_IMAGE_NO int,
	FOREIGN KEY(PROFILE_IMAGE_NO) REFERENCES TBL_PROFILE_IMAGE(PROFILE_IMAGE_NO)	
	)ENGINE=innodb;

-- 3. 블랙 리스트  테이블
DROP TABLE IF EXISTS TBL_BLACKLIST;

CREATE TABLE IF NOT EXISTS TBL_BLACKLIST(
	BLACK_NO int PRIMARY KEY AUTO_INCREMENT,
	USER_NO int NOT NULL,
	BLACK_ORIGIN_AUTH varchar(10) NOT NULL,
	BLACK_REASON varchar(500) NOT NULL,
	BLACK_REGIST_DATE timestamp NOT NULL,
	BLACK_STATUS varchar(20) DEFAULT 'active' NOT NULL,
	BLACK_UPDATE_DATE timestamp,
	BLACK_SENTENCE_PERIOD timestamp
	)ENGINE=innodb;

-- 4. 카테고리 정보
DROP TABLE IF EXISTS TBL_BUSINESS_CATEGORY;

CREATE TABLE IF NOT EXISTS TBL_BUSINESS_CATEGORY(
	BUSINESS_CATEGORY_NO int PRIMARY KEY AUTO_INCREMENT,
	BUSINESS_CATEGORY_NAME varchar(50) NOT NULL,
	BUSINESS_CATEGORY_COLOR_CODE varchar(10) NOT NULL,
	BUSINESS_CATEGORY_STATUS varchar(20) DEFAULT 'active'
	)ENGINE=innodb;

-- 5. 사업체 정보
DROP TABLE IF EXISTS TBL_BUSINESS;

CREATE TABLE IF NOT EXISTS TBL_BUSINESS(
	BUSINESS_NO int PRIMARY KEY AUTO_INCREMENT,
	BUSINESS_NAME varchar(255) NOT NULL,
	BUSINESS_REGIST_NO int UNIQUE NOT NULL,
	BUSINESS_ADDRESS_1 varchar(255) NOT NULL,
	BUSINESS_ADDRESS_2 varchar(255) NOT NULL,
	BUSINESS_ZIP_CODE varchar(20) NOT NULL,
	BUSINESS_PHONE varchar(15) NOT NULL,
	BUSINESS_CATEGORY_NO int NOT NULL,
	USER_NO int NOT NULL,
	BUSINESS_REGIST_DATE timestamp NOT NULL,
	BUSINESS_UPDATE_DATE timestamp,
	BUSINESS_STATUS varchar(10) DEFAULT 'active',
	FOREIGN KEY(BUSINESS_CATEGORY_NO) REFERENCES TBL_BUSINESS_CATEGORY(BUSINESS_CATEGORY_NO),
	FOREIGN KEY(USER_NO) REFERENCES TBL_USER(USER_NO)
	)ENGINE=innodb;

-- 6. 지정휴무 테이블
DROP TABLE IF EXISTS TBL_HOLIDAY;

CREATE TABLE IF NOT EXISTS TBL_HOLIDAY(
	HOLIDAY_NO int PRIMARY KEY AUTO_INCREMENT,
	HOLIDAY_NAME varchar(255) NOT NULL,
	HOLIDAY_REASON varchar(500) NOT NULL,
	HOLIDAY_START_DATE timestamp NOT NULL,
	HOLIDAY_END_DATE timestamp NOT NULL,
	BUSINESS_NO int NOT NULL,
	HOLIDAY_REGIST_DATE timestamp NOT NULL,
	HOLIDAY_UPDATE_DATE timestamp,
	HOLIDAY_STATUS varchar(10) DEFAULT 'active' NOT NULL,
	FOREIGN KEY(BUSINESS_NO) REFERENCES TBL_BUSINESS(BUSINESS_NO)
	)ENGINE=innodb;

-- 7. 정기휴무 테이블
DROP TABLE IF EXISTS TBL_VACATION;

CREATE TABLE IF NOT EXISTS TBL_VACATION(
	VACATION_NO int PRIMARY KEY AUTO_INCREMENT,
	VACATION_DAY varchar(20) NOT NULL,
	BUSINESS_NO int NOT NULL,
	FOREIGN KEY(BUSINESS_NO) REFERENCES TBL_BUSINESS(BUSINESS_NO)
	)ENGINE=innodb;

-- 8. 단위 이용 시간 테이블
DROP TABLE IF EXISTS TBL_TIME_UNIT_SCHEDULE;

CREATE TABLE IF NOT EXISTS TBL_TIME_UNIT_SCHEDULE(
	TIME_UNIT_SCHEDULE_NO int PRIMARY KEY AUTO_INCREMENT,
	START_TIME time NOT NULL,
	END_TIME time NOT NULL,
	BUSINESS_NO int NOT NULL,
	WEEKEND_TIME_UNIT_STATUS varchar(20) DEFAULT 'N',
	FOREIGN key(BUSINESS_NO) REFERENCES TBL_BUSINESS(BUSINESS_NO)
	)ENGINE=innodb;

-- 9. 방 정보 테이블
DROP TABLE IF EXISTS TBL_ROOM;

CREATE TABLE IF NOT EXISTS TBL_ROOM(
	ROOM_NO int PRIMARY KEY AUTO_INCREMENT,
	ROOM_NAME varchar(50) NOT NULL,
	BUSINESS_NO int NOT NULL,
	ROOM_INTRO varchar(100) NOT NULL,
	ROOM_DETAIL varchar(500) NOT NULL,
	ROOM_AVAILABLE_STATUS varchar(20) DEFAULT 'Y' NOT NULL,
	ROOM_REGIST_DATE timestamp NOT NULL,
	ROOM_UPDATE_DATE timestamp,
	ROOM_STATUS varchar(20) DEFAULT 'active' NOT NULL,
	ROOM_MIN_PEOPLE int NOT NULL,
	ROOM_MAX_PEOPLE int NOT NULL,
	ROOM_FACILITY_INFO varchar(500) NOT NULL,
	ROOM_NOTICE varchar(500) NOT NULL,
	FOREIGN KEY(BUSINESS_NO) REFERENCES TBL_BUSINESS(BUSINESS_NO)
	)ENGINE=innodb;
	
-- 10. 가격 테이블
DROP TABLE IF EXISTS TBL_ROOM_PRICE;

CREATE TABLE IF NOT EXISTS TBL_ROOM_PRICE(
	ROOM_PRICE_NO int PRIMARY KEY AUTO_INCREMENT,
	ROOM_NORMAL_PRICE int NOT NULL,
	ROOM_WEEKEND_PRICE int,
	ROOM_NO int NOT NULL,
	FOREIGN KEY(ROOM_NO) REFERENCES TBL_ROOM(ROOM_NO)
	)ENGINE=innodb;

-- 11. 시설 옵션 테이블
DROP TABLE IF EXISTS TBL_ROOM_OPTION;

CREATE TABLE IF NOT EXISTS TBL_ROOM_OPTION(
	OPTION_NO int PRIMARY KEY AUTO_INCREMENT,
	OPTION_NAME varchar(20) NOT NULL
	)ENGINE=innodb;

-- 12. 옵션 적용 여부 테이블
DROP TABLE IF EXISTS TBL_APPLIED_OPTION;

CREATE TABLE IF NOT EXISTS TBL_APPLIED_OPTION(
	APPLIED_OPTION_NO int NOT NULL,
	ROOM_NO int NOT NULL,
	FOREIGN KEY(APPLIED_OPTION_NO) REFERENCES TBL_ROOM_OPTION(OPTION_NO),
	FOREIGN KEY(ROOM_NO) REFERENCES TBL_ROOM(ROOM_NO)
	)ENGINE=innodb;

-- 13. 방 이미지 테이블
DROP TABLE IF EXISTS TBL_ROOM_IMAGE;

CREATE TABLE IF NOT EXISTS TBL_ROOM_IMAGE(
	ROOM_IMAGE_NO int PRIMARY KEY AUTO_INCREMENT,
	ROOM_REPRENSENT_IMAGE_STATUS varchar(20) DEFAULT 'Y' NOT NULL,
	ROOM_IMAGE_ORIGINAL_NAME varchar(255) NOT NULL,
	ROOM_IMAGE_CHANGED_NAME varchar(255) NOT NULL,
	ROOM_IMAGE_EXT varchar(20) NOT NULL,
	ROOM_IMAGE_PATH varchar(255) NOT NULL,
	ROOM_IMAGE_REGIST_DATE timestamp NOT NULL,
	ROOM_IMAGE_UPDATE_DATE timestamp,
	ROOM_IMAGE_STATUS varchar(10) DEFAULT 'active' NOT NULL,
	ROOM_NO int NOT NULL,
	FOREIGN KEY(ROOM_NO) REFERENCES TBL_ROOM(ROOM_NO)
	)ENGINE=innodb;

-- 14. 예약 테이블
DROP TABLE IF EXISTS TBL_RESERVATION;

CREATE TABLE IF NOT EXISTS TBL_RESERVATION(
	RESERVATION_NO int PRIMARY KEY AUTO_INCREMENT,
	USER_NO int NOT NULL,
	RESERVATION_DATE timestamp NOT NULL,
	RESERVATION_TIME time NOT NULL,
	RESERVATION_PERSON int NOT NULL,
	RESERVATION_TOTAL_COST int NOT NULL,
	RESERVATION_STATUS varchar(20) DEFAULT 'active' NOT NULL,
	RESERVATION_CANCEL_REASON varchar(500),
	RESERVATION_CANCEL_DATE timestamp,
	RESERVATION_REGIST_DATE timestamp NOT NULL,
	ROOM_NO int NOT NULL,
	FOREIGN key(USER_NO) REFERENCES TBL_USER(USER_NO),
	FOREIGN KEY(ROOM_NO) REFERENCES TBL_ROOM(ROOM_NO)
	)ENGINE=innodb;

-- 15. 신고 테이블
DROP TABLE IF EXISTS TBL_REPORT;

CREATE TABLE IF NOT EXISTS TBL_REPORT(
	REPORT_NO int PRIMARY KEY AUTO_INCREMENT,
	REPORT_CONTENTS varchar(500) NOT NULL,
	REPORT_REGIST_DATE timestamp NOT NULL,
	REPORT_DONE varchar(20) DEFAULT 'un_done' NOT NULL,
	REPORTER_NO int NOT NULL,
	REPORTED_NO int NOT NULL,
	REPORT_DONE_DATE timestamp,
	REPORT_TYPE varchar(10) NOT NULL,
	REPORT_REASON varchar(200) NOT NULL,
	FOREIGN KEY(REPORTER_NO) REFERENCES TBL_USER(USER_NO),
	FOREIGN KEY(REPORTED_NO) REFERENCES TBL_USER(USER_NO)
	)ENGINE=innodb;

-- 16. 피신고자 테이블 - 안되서 만든 건데 문법 오류였
-- DROP TABLE IF EXISTS TBL_REPORTED;
-- 
-- CREATE TABLE IF NOT EXISTS TBL_REPORTED(
-- 	REPORTED_NO int PRIMARY KEY AUTO_INCREMENT,
-- 	USER_NO int NOT NULL,
-- 	FOREIGN KEY(USER_NO) REFERENCES TBL_USER(USER_NO)
-- 	)ENGINE=innodb;

-- QnA 부분 삭제

-- 19. 리뷰 테이블
DROP TABLE IF EXISTS TBL_REVIEW;

CREATE TABLE IF NOT EXISTS TBL_REVIEW(
	REVIEW_NO int PRIMARY KEY AUTO_INCREMENT,
	USER_NO INT NOT NULL,
	REVIEW_CONTENTS VARCHAR(500) NOT NULL,
	REVIEW_RATING INT,
	REVIEW_REGIST_DATE timestamp NOT NULL,
	RESERVATION_NO INT NOT NULL,
	REVIEW_UPDATE_DATE timestamp,
	REVIEW_STATUS VARCHAR(20) DEFAULT '안읽음' NOT NULL,
	ROOM_NO int NOT NULL,
	FOREIGN KEY(USER_NO) REFERENCES TBL_USER(USER_NO),
	FOREIGN KEY(RESERVATION_NO) REFERENCES TBL_RESERVATION(RESERVATION_NO),
	FOREIGN key(ROOM_NO) REFERENCES TBL_ROOM(ROOM_NO)
	)ENGINE=innodb;

-- 20. 리뷰 답글 테이블
DROP TABLE IF EXISTS TBL_REVIEW_REPLY;

CREATE TABLE IF NOT EXISTS TBL_REVIEW_REPLY(
	REVIEW_REPLY_NO int PRIMARY KEY AUTO_INCREMENT,
	REVIEW_NO INT NOT NULL,
	USER_NO INT NOT NULL,
	REVIEW_REPLY_CONTENTS VARCHAR(500) NOT NULL,
	REVIEW_REPLY_REGIST_DATE timestamp NOT NULL,
	REVIEW_REPLY_UPDATE_DATE timestamp,
	REVIEW_REPLY_STATUS VARCHAR(20) DEFAULT 'active' NOT NULL,
	FOREIGN KEY(REVIEW_NO) REFERENCES TBL_REVIEW(REVIEW_NO),
	FOREIGN KEY(USER_NO) REFERENCES TBL_USER(USER_NO)
	)ENGINE=INNODB;

-- 21. 리뷰 이미지 테이블
DROP TABLE IF EXISTS TBL_REVIEW_IMAGE;

CREATE TABLE IF NOT EXISTS TBL_REVIEW_IMAGE(
	REVIEW_IMAGE_NO int PRIMARY KEY AUTO_INCREMENT,
	REVIEW_NO INT NOT NULL,
	REVIEW_IMAGE_ORIGINAL_NAME VARCHAR(255) NOT NULL,
	REVIEW_IMAGE_CHANGED_NAME VARCHAR(255) NOT NULL,
	REVIEW_IMAGE_EXT VARCHAR(10) NOT NULL,
	REVIEW_IMAGE_PATH VARCHAR(255) NOT NULL,
	REVIEW_IMAGE_REGIST_DATE timestamp NOT NULL,
	REVIEW_IMAGE_UPDATE_DATE timestamp,
	REVIEW_IMAGE_STATUS VARCHAR(20) DEFAULT 'active' NOT NULL,
	FOREIGN KEY(REVIEW_NO) REFERENCES TBL_REVIEW(REVIEW_NO)
	)ENGINE=INNODB;

-- 22. 공지사항 테이블
DROP TABLE IF EXISTS TBL_ANNOUNCEMENT;

CREATE TABLE IF NOT EXISTS TBL_ANNOUNCEMENT(
	ANNOUNCEMENT_NO int PRIMARY KEY AUTO_INCREMENT,
	USER_NO INT NOT NULL,
	ANNOUNCEMENT_TITLE VARCHAR(50) NOT NULL,
	ANNOUNCEMENT_REGIST_DATE timestamp NOT NULL,
	ANNOUNCEMENT_CONTENTS VARCHAR(500) NOT NULL,
	ANNOUNCEMENT_UPDATE_DATE timestamp,
	ANNOUNCEMENT_STATUS VARCHAR(20) DEFAULT 'Y' NOT NULL,
	FOREIGN KEY(USER_NO) REFERENCES TBL_USER(USER_NO)
	)ENGINE=INNODB;

-- 23. 공지사항 이미지 테이블
DROP TABLE IF EXISTS TBL_ANNOUNCEMENT_IMAGE;

CREATE TABLE IF NOT EXISTS TBL_ANNOUNCEMENT_IMAGE(
	ANNOUNCEMENT_IMAGE_NO int PRIMARY KEY AUTO_INCREMENT,
	ANNOUNCEMENT_NO INT NOT NULL,
	ANNOUNCEMENT_IMAGE_ORIGINAL_NAME VARCHAR(255) NOT NULL,
	ANNOUNCEMENT_IMAGE_CHANGED_NAME VARCHAR(255) NOT NULL,
	ANNOUNCEMENT_IMAGE_PATH VARCHAR(255) NOT NULL,
	ANNOUNCEMENT_EXT VARCHAR(10) NOT NULL,
	ANNOUNCEMENT_IMAGE_REGIST_DATE timestamp NOT NULL,
	ANNOUNCEMENT_IMAGE_UPDATE_DATE timestamp,
	ANNOUNCEMENT_STATUS VARCHAR(20) NOT NULL,
	FOREIGN KEY(ANNOUNCEMENT_NO) REFERENCES TBL_ANNOUNCEMENT(ANNOUNCEMENT_NO)
	)ENGINE=INNODB;

-- 24. 문의사항 테이블
DROP TABLE IF EXISTS TBL_INQUIRY;

CREATE TABLE IF NOT EXISTS TBL_INQUIRY(
	INQUIRY_NO int PRIMARY KEY AUTO_INCREMENT,
	USER_NO INT NOT NULL,
	INQUIRY_TITLE VARCHAR(50) NOT NULL,
	INQUIRY_REGIST_DATE timestamp NOT NULL,
	INQUIRY_CONTENTS VARCHAR(500) NOT NULL,
	INQUIRY_UPDATE_DATE timestamp,
	INQUIRY_STATUS VARCHAR(20) DEFAULT 'active' NOT NULL,
	FOREIGN KEY(USER_NO) REFERENCES TBL_USER(USER_NO)
	)ENGINE=INNODB;

-- 25. 문의사항 답글 테이블
DROP TABLE IF EXISTS TBL_INQUIRY_REPLY;

CREATE TABLE IF NOT EXISTS TBL_INQUIRY_REPLY(
	INQUIRY_REPLY_NO int PRIMARY KEY AUTO_INCREMENT,
	USER_NO INT NOT NULL,
	INQUIRY_REPLY_CONTENTS VARCHAR(500) NOT NULL,
	INQUIRY_REPLY_REGIST_DATE timestamp NOT NULL,
	INQUIRY_REPLY_STATUS VARCHAR(20) DEFAULT 'active' NOT NULL,
	INQUIRY_REPLY_UPDATE_DATE timestamp,
	INQUIRY_NO INT NOT NULL,
	FOREIGN KEY(USER_NO) REFERENCES TBL_USER(USER_NO),
	FOREIGN KEY(INQUIRY_NO) REFERENCES TBL_INQUIRY(INQUIRY_NO)
	)ENGINE=INNODB;

-- 26. 문의사항 이미지 테이블
DROP TABLE IF EXISTS TBL_INQUIRY_IMAGE;

CREATE TABLE IF NOT EXISTS TBL_INQUIRY_IMAGE(
	INQUIRY_IMAGE_NO int PRIMARY KEY AUTO_INCREMENT,
	INQUIRY_NO INT NOT NULL,
	INQUIRY_IMAGE_ORIGINAL_NAME VARCHAR(255) NOT NULL,
	INQUIRY_IMAGE_CHANGED_NAME VARCHAR(255) NOT NULL,
	INQUIRY_IMAGE_EXT VARCHAR(10) NOT NULL,
	INQUIRY_IMAGE_PATH VARCHAR(255) NOT NULL,
	INQUIRY_IMAGE_REGIST_DATE timestamp NOT NULL,
	INQUIRY_IMAGE_UPDATE_DATE timestamp,
	INQUIRY_IMAGE_STATUS VARCHAR(20) DEFAULT 'active' NOT NULL,
	FOREIGN KEY(INQUIRY_NO) REFERENCES TBL_INQUIRY(INQUIRY_NO)
	)ENGINE=innodb;

SHOW tables;

-- 관리자 계정(수정 필요)
-- INSERT INTO tbl_user(
-- 	USER_EMAIL,
-- 	USER_PASSWORD,
-- 	USER_NICKNAME,
-- 	USER_PHONE,
-- 	USER_AUTH,
-- 	USER_REGIST_DATE
-- 	)VALUES(
-- 	'admin',
-- 	0000,
-- 	'관리자',
-- 	010,
-- 	'ADMIN',
-- 	20231219)
-- )
